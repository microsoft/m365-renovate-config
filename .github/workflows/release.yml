name: Release

on:
  workflow_dispatch:
  workflow_run:
    workflows: [CI]
    types: [completed]
    branches: [main]

concurrency:
  group: ${{ github.ref }}-release

env:
  MAJOR_BRANCH: v1

permissions:
  actions: read

jobs:
  release:
    # Only run this if it's a workflow_dispatch trigger or the CI workflow was successful
    if: ${{ github.event.workflow_run == null || github.event.workflow_run.conclusion == 'success' }}

    runs-on: ubuntu-latest

    # This environment contains secrets needed for publishing
    environment: release

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # Don't save creds in the git config (so it's easier to override later)
          persist-credentials: false

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version-file: .nvmrc

      - run: yarn --frozen-lockfile

      - name: Check for newer runs
        uses: ecraig12345/beachball-actions/should-release@v1
        id: shouldRelease
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          batch: true
          mode: output
          # The should-release action is primarily made for beachball, so it checks for change files.
          # Since this repo doesn't use change files, check for any files instead.
          changeGlob: '*'

      - name: Merge release branch with main
        if: ${{ steps.shouldRelease.outputs.shouldRelease == 'yes' }}
        run: |
          set -x

          # Get the existing remote URL without creds, and use a trap (like try/finally)
          # to restore it after this step finishes
          trap "git remote set-url origin '$(git remote get-url origin)'" EXIT

          # Add a token to the remote URL for auth during release
          git remote set-url origin "https://$REPO_PAT@github.com/$GITHUB_REPOSITORY"

          git config user.name "GitHub Actions"
          git config user.email "not provided"

          git checkout "$MAJOR_BRANCH"
          git merge main --no-edit -Xtheirs
          git push origin main
        env:
          REPO_PAT: ${{ secrets.REPO_PAT }}

      - name: Release from ${{ env.MAJOR_BRANCH }}
        if: ${{ steps.shouldRelease.outputs.shouldRelease == 'yes' }}
        run: |
          set -x
          yarn check-token "$GH_TOKEN"
          GITHUB_REF="refs/heads/$MAJOR_BRANCH" yarn release
        env:
          GH_TOKEN: ${{ secrets.REPO_PAT }}
          GIT_AUTHOR_NAME: GitHub Actions
          GIT_AUTHOR_EMAIL: not provided
